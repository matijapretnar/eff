(* This example is described in Section 6.11 of "Programming with Algebraic Effects and
   Handlers" by A. Bauer and M. Pretnar. *)

type ('a, 'b) delimited =
effect
  operation shift : (('a -> 'b) -> 'b) -> 'a
end

let rec reset d = handler
  | d#shift f k -> with reset d handle (f k) ;;

(* An example from http://lamp.epfl.ch/~rompf/continuations-icfp09.pdf *)

let d = new delimited in
with reset d handle
  d#shift (fun k -> k (k (k 7))) * 2 + 1 ;;
