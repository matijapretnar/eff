type (_, _) eff_internal_effect += Decide : (unit, bool) eff_internal_effect

let _two_45 = 2

let two = _two_45

let _three_46 = 3

let three = _three_46

type intlist = IntNil | IntCons of (int * intlist)

;;
let rec _concat_47 _x_65 =
  match _x_65 with
  | IntNil -> fun (_ys_78 : intlist) -> _ys_78
  | IntCons (_z_80, _zs_79) ->
      fun (_ys_81 : intlist) -> IntCons (_z_80, _concat_47 _zs_79 _ys_81)
in
let rec _f_74 (_x_69, _k_76) =
  let _l_66 (_y_71 : bool) = _k_76 (if _y_71 then 2 else 3) in
  _concat_47 (_l_66 true) (_l_66 false)
in
_f_74 ((), fun (_x_59 : int) -> IntCons (_x_59, IntNil))
