type (_, _) eff_internal_effect += Decide : (unit, bool) eff_internal_effect

type intlist = IntNil | IntCons of (int * intlist)

;;
let rec _concat_42 _x_62 =
  match _x_62 with
  | IntNil -> fun (_ys_76 : intlist) -> _ys_76
  | IntCons (_z_78, _zs_77) ->
      fun (_ys_79 : intlist) -> IntCons (_z_78, _concat_42 _zs_77 _ys_79)
in
let _l_63 (_y_72 : bool) =
  let _l_63 (_y_69 : bool) =
    IntCons (((if _y_72 then 10 else 20) - if _y_69 then 0 else 5), IntNil)
  in
  _concat_42 (_l_63 true) (_l_63 false)
in
_concat_42 (_l_63 true) (_l_63 false)
