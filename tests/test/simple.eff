(* external ( + ) : int -> int -> int = "+";; *)

(* 3;; *)

(fun x -> x) ;;

(* (fun x -> x x);; *)

(* (fun x -> x) 3;; *)

(* (fun (x,y) -> 3);; *)

(* (fun a -> if a then 1 else 2);; *)

effect Op : unit -> int;;

effect Op2 : unit -> int;;

effect Op3 : unit -> int;;
(* (fun x -> #Op ());; *)

#Op;;

(* #Op ();; *)

(fun a -> if a then (#Op ()) else 2);;

(fun a -> match a with
          | true -> #Op ()
          | false -> #Op2 ()
  );;

(fun x -> (fun y -> (x, y)));;

(* fun f x -> f (f x);; *)

handler
  | #Op () k ->  k 3
  | #Op2 () k ->  k 3;;

#type handle (#Op3 ()) with
  | #Op () k ->  k 3
  | #Op2 () k ->  k 3